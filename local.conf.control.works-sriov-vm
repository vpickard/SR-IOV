[[local|localrc]]
# put the log files in a dir different than the source so they can be manipulated independently
LOGFILE=/opt/stack/logs/stack.sh.log
SCREEN_LOGDIR=/opt/stack/logs
LOG_COLOR=False
# flip OFFLINE and RECLONE to lock (RECLONE=no) or update the source.
OFFLINE=True
RECLONE=no
#OFFLINE=False
#RECLONE=yes
VERBOSE=True

# disable everything so we can explicitly enable only what we need
disable_all_services

# Core compute (glance+keystone+nova+vnc)
enable_service g-api g-reg key n-api n-crt n-obj n-cpu n-cond n-sch n-novnc n-xvnc n-cauth
# neutron services. Recognize q-agt and q-l3 is not set which means ODL is the l2 agent and l3 provider.
enable_service neutron q-dhcp q-meta q-svc

#stupid python dependency crap for oslo.policy
#enable_service horizon

# enable one of the two below:
# the first is external which assumes the user has ODL running already
# make sure to set the ODL_MGR_IP and ODL_PORT because we run in manual mode
# the second is allinone where devstack will download (if online) and start ODL
enable_service odl-compute odl-neutron

# or use the allinone
#enable_service odl-server odl-compute

# additional services. rabbit for rpm-based vm.
enable_service mysql rabbit

#q-agt is L2 agent
#enable_service q-agt 

HOST_IP=10.8.125.240
HOST_NAME=odl31
SERVICE_HOST_NAME=$HOST_NAME
SERVICE_HOST=$HOST_IP
Q_HOST=$SERVICE_HOST

enable_plugin networking-odl http://git.openstack.org/openstack/networking-odl stable/newton

ODL_MODE=manual
#ODL_MODE=allinone
#ODL_RELEASE=boron-snapshot-0.5.2
#ODL_NETVIRT_KARAF_FEATURE=odl-netvirt-openstack,odl-dlux-all
# PORT and IP are only needed if using manual mode with external ODL. allinone uses defaults.
ODL_PORT=8080
ODL_MGR_IP=10.8.125.240
ODL_USING_EXISTING_JAVA=False
ODL_JAVA_MAX_MEM=2048m

#NEUTRON_CREATE_INITIAL_NETWORKS=False
#ODL_PROVIDER_MAPPINGS=public:eth2
SKIP_OVS_INSTALL=True

VNCSERVER_PROXYCLIENT_ADDRESS=$HOST_IP
VNCSERVER_LISTEN=0.0.0.0

DATABASE_PASSWORD=mysql
RABBIT_PASSWORD=rabbit
QPID_PASSWORD=rabbit
SERVICE_TOKEN=service
SERVICE_PASSWORD=admin
ADMIN_PASSWORD=admin

## Neutron Options
#ENABLE_TENANT_TUNNELS=False
#ENABLE_TENANT_VLANS=True
#TENANT_VLAN_RANGE=2901:2905
#PHYSICAL_NETWORK=physnet1
#OVS_PHYSICAL_BRIDGE=br-em1
#PUBLIC_INTERFACE=em1
#Q_USE_PROVIDER_NETWORKING=True
#Q_L3_ENABLED=False
#IP_VERSION=4

## Neutron options to create subnets
#PROVIDER_NETWORK_TYPE="vlan"
#SEGMENTATION_ID=2010


#### SR-IOV setup ####

# ML2 Configuration
Q_PLUGIN=ml2
#Q_ML2_PLUGIN_MECHANISM_DRIVERS=openvswitch,sriovnicswitch
#Q_ML2_PLUGIN_MECHANISM_DRIVERS=openvswitch,l2population,opendaylight,sriovnicswitch

# see if we can create vm with sr-iov when only 1 driver is configured - yes. Now, add back opendaylight...
#Q_ML2_PLUGIN_MECHANISM_DRIVERS=sriovnicswitch,opendaylight

# This works, will create OVS/ODL VM and SR-IOV VM, but sr-iov vm will not get ip, and link state on sriov-vm i/f is down
#Q_ML2_PLUGIN_MECHANISM_DRIVERS=sriovnicswitch,openvswitch,opendaylight

# see if sriov-vm can get an ip with only sriovnicswitch driver. 
#
# no, even with just one ml2 driver, no ip addr, link still down
#Q_ML2_PLUGIN_MECHANISM_DRIVERS=sriovnicswitch


# This works, will create OVS/ODL VM and SR-IOV VM, but sr-iov vm will not get ip, and link state on sriov-vm i/f is down
Q_ML2_PLUGIN_MECHANISM_DRIVERS=sriovnicswitch,openvswitch,opendaylight

Q_ML2_PLUGIN_TYPE_DRIVERS=vlan,flat,local,vxlan
#Q_ML2_TENANT_NETWORK_TYPE=vlan
Q_ML2_TENANT_NETWORK_TYPE=vxlan
ML2_VLAN_RANGES=physnet1:2901:2909

# l2gw plugin
enable_plugin networking-l2gw http://git.openstack.org/openstack/networking-l2gw stable/newton
enable_service l2gw-plugin
NETWORKING_L2GW_SERVICE_DRIVER=L2GW:OpenDaylight:networking_odl.l2gateway.driver.OpenDaylightL2gwDriver:default

# use master for latest
BRANCH=stable/newton
#BRANCH=master
GLANCE_BRANCH=$BRANCH
HORIZON_BRANCH=$BRANCH
KEYSTONE_BRANCH=$BRANCH
NOVA_BRANCH=$BRANCH
NEUTRON_BRANCH=$BRANCH
SWIFT_BRANCH=$BRANCH
##CLIFF_BRANCH=$BRANCH
##TEMPEST_BRANCH=$BRANCH
CINDER_BRANCH=$BRANCH
HEAT_BRANCH=$BRANCH
TROVE_BRANCH=$BRANCH
CEILOMETER_BRANCH=$BRANCH

# Is this needed? 
#[securitygroup]
#firewall_driver = neutron.agent.firewall.NoopFirewallDriver

[[post-config|/etc/neutron/plugins/ml2/ml2_conf.ini]]
[agent]
minimize_polling=True

[[post-config|$NOVA_CONF]]
[DEFAULT]
scheduler_default_filters=RamFilter,ComputeFilter,AvailabilityZoneFilter,ComputeCapabilitiesFilter,ImagePropertiesFilter,PciPassthroughFilter,AggregateInstanceExtraSpecsFilter
scheduler_available_filters=nova.scheduler.filters.all_filters

# ML2 plugin bits for SR-IOV enablement of Intel 82599 NIC - find this via lspci -nn | grep -A5 Eth .. use VF, not PF
[[post-config|/$Q_PLUGIN_CONF_FILE]]
[ml2_sriov]
supported_pci_vendor_devs = 8086:10ed

#[[post-config|$NEUTRON_CONF]]
#[DEFAULT]
#service_plugins = networking_odl.l3.l3_odl.OpenDaylightL3RouterPlugin

# when adding ODL back, need post config to change mode from native to vsctl
[[post-config|/etc/neutron/dhcp_agent.ini]]
[OVS]
ovsdb_interface = vsctl
